{"version":3,"sources":["components/Header.js","actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Header","nextTodoId","VisibilityFilters","Link","active","children","onClick","disabled","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","className","FilterLink","input","onSubmit","e","text","preventDefault","value","id","ref","node","completed","style","textDecoration","removeTodo","TodoList","todos","toggleTodo","padding","length","map","todo","key","getVisibleTodos","t","Error","App","VisibleTodoList","action","item","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"wMAQeA,EANA,kBACb,gCACE,4CCJAC,EAAa,EAiBJC,EACD,WADCA,EAEK,iBAFLA,EAGE,cCLAC,EAZF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,QAArB,OACX,4BAAQA,QAASA,EAASC,SAAUH,GACjCC,ICOUG,eARS,SAACC,EAAOC,GAAR,MAAsB,CAC5CN,OAAQM,EAASC,SAAWF,EAAMG,qBAGT,SAACC,EAAUH,GAAX,MAAyB,CAClDJ,QAAS,kBAAMO,EFF+B,CAC9CC,KAAM,wBACNH,OEA4CD,EAASC,aAGxCH,CAA6CL,GCC7CY,EATA,kBACb,yBAAKC,UAAU,UACb,wCACA,kBAACC,EAAD,CAAYN,OAAQT,GAApB,OACA,kBAACe,EAAD,CAAYN,OAAQT,GAApB,UACA,kBAACe,EAAD,CAAYN,OAAQT,GAApB,eCgBWM,iBArBC,SAAC,GAAkB,IAC7BU,EADaL,EAAe,EAAfA,SAWjB,OACE,6BACE,0BAAMM,SAVO,SAACC,GJNG,IAACC,EIOpBD,EAAEE,iBACEJ,EAAMK,QACRV,GJTkBQ,EISDH,EAAMK,MJTK,CAChCT,KAAM,WACNU,GAAIvB,IACJoB,UIOIH,EAAMK,MAAQ,MAOZ,2BAAOE,IAAK,SAACC,GAAD,OAAWR,EAAQQ,KAC/B,4BAAQZ,KAAK,UAAb,iBCiBON,iBA/BF,SAAC,GAAgD,IAA9CF,EAA6C,EAA7CA,QAASqB,EAAoC,EAApCA,UAAWN,EAAyB,EAAzBA,KAAMG,EAAmB,EAAnBA,GAAIX,EAAe,EAAfA,SAO5C,OACE,6BACE,6BACE,wBACEP,QAASA,EACTsB,MAAO,CACLC,eAAgBF,EAAY,eAAiB,SAG9CN,GAEH,0BAAMf,QAjBS,WACfkB,GACFX,ELeoB,SAACW,GAAD,MAAS,CACjCV,KAAM,cACNU,MKjBaM,CAAWN,QAiBpB,iCCFSO,EAnBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACf,wBAAIL,MAAO,CAAEM,QAASF,EAAMG,OAAS,EAAI,YAAc,SACpDH,EAAMI,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eAAMC,IAAKD,EAAKb,GAAIA,GAAIa,EAAKb,IAAQa,EAArC,CAA2C/B,QAAS,kBAAM2B,EAAWI,EAAKb,aCF1Ee,EAAkB,SAACP,EAAOrB,GAC9B,OAAQA,GACN,KAAKT,EACH,OAAO8B,EACT,KAAK9B,EACH,OAAO8B,EAAMrB,QAAO,SAAC6B,GAAD,OAAOA,EAAEb,aAC/B,KAAKzB,EACH,OAAO8B,EAAMrB,QAAO,SAAC6B,GAAD,OAAQA,EAAEb,aAChC,QACE,MAAM,IAAIc,MAAM,mBAAqB9B,KAY5BH,eARS,SAACC,GAAD,MAAY,CAClCuB,MAAOO,EAAgB9B,EAAMuB,MAAOvB,EAAMG,sBAGjB,SAACC,GAAD,MAAe,CACxCoB,WAAY,SAACT,GAAD,OAAQX,EPXI,SAACW,GAAD,MAAS,CACjCV,KAAM,cACNU,MOS6BS,CAAWT,QAG3BhB,CAA6CuB,GCX7CW,EATH,kBACV,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,Q,eCSWX,EApBD,WAAyB,IAAxBvB,EAAuB,uDAAf,GAAImC,EAAW,uCACpC,OAAQA,EAAO9B,MACb,IAAK,WACH,MAAM,GAAN,mBACKL,GADL,CAEE,CACEe,GAAIoB,EAAOpB,GACXH,KAAMuB,EAAOvB,KACbM,WAAW,KAGjB,IAAK,cACH,OAAOlB,EAAM2B,KAAI,SAACC,GAAD,OAAWA,EAAKb,KAAOoB,EAAOpB,GAAnB,2BAA6Ba,GAA7B,IAAmCV,WAAYU,EAAKV,YAAcU,KAChG,IAAK,cACH,OAAO5B,EAAME,QAAO,SAACkC,GAAD,OAAUA,EAAKrB,KAAOoB,EAAOpB,MACnD,QACE,OAAOf,ICLEG,EATU,WAAiD,IAAhDH,EAA+C,uDAAvCP,EAA4B0C,EAAW,uCACvE,OAAQA,EAAO9B,MACb,IAAK,wBACH,OAAO8B,EAAOjC,OAChB,QACE,OAAOF,ICHEqC,cAAgB,CAC7Bd,QACApB,qBCEImC,G,MAAQC,YAAYC,IAE1BC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.8845e8bd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header>\n    <h1>To-do List</h1>\n  </header>\n);\n\nexport default Header;\n","let nextTodoId = 0;\nexport const addTodo = (text) => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text,\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter,\n});\n\nexport const toggleTodo = (id) => ({\n  type: 'TOGGLE_TODO',\n  id,\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n};\n\nexport const removeTodo = (id) => ({\n  type: 'REMOVE_TODO',\n  id,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Link = ({ active, children, onClick }) => (\n  <button onClick={onClick} disabled={active}>\n    {children}\n  </button>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Link;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Link from '../components/Link';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n","import React from 'react';\nimport FilterLink from '../containers/FilterLink';\nimport { VisibilityFilters } from '../actions';\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (input.value) {\n      dispatch(addTodo(input.value));\n      input.value = '';\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input ref={(node) => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeTodo } from '../actions';\n\nconst Todo = ({ onClick, completed, text, id, dispatch }) => {\n  const handleRemove = () => {\n    if (id) {\n      dispatch(removeTodo(id));\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <li\n          onClick={onClick}\n          style={{\n            textDecoration: completed ? 'line-through' : 'none',\n          }}\n        >\n          {text}\n        </li>\n        <span onClick={handleRemove}></span>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default connect()(Todo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul style={{ padding: todos.length > 0 ? '10px 20px' : 'none' }}>\n    {todos.map((todo) => (\n      <Todo key={todo.id} id={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter((t) => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter((t) => !t.completed);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleTodo: (id) => dispatch(toggleTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport AddTodo from '../containers/AddTodo';\nimport VisibleTodoList from '../containers/VisibleTodoList';\n\nconst App = () => (\n  <div>\n    <Header />\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    case 'TOGGLE_TODO':\n      return state.map((todo) => (todo.id === action.id ? { ...todo, completed: !todo.completed } : todo));\n    case 'REMOVE_TODO':\n      return state.filter((item) => item.id !== action.id);\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport './styling/styles.scss';\n\nconst store = createStore(rootReducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}