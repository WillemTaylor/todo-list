{"ast":null,"code":"import _objectSpread from \"/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case 'TOGGLE_TODO':\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    case 'REMOVE_TODO':\n      var itemId = action.data;\n      return state.filter(function (val) {\n        return val.id !== itemId;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/src/reducers/todos.js"],"names":["todos","state","action","type","id","text","completed","map","todo","itemId","data","filter","val"],"mappings":";;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,0CACKF,KADL,IAEE;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFF;;AAQF,SAAK,aAAL;AACE,aAAOL,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD;AAAA,eAAWA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,qBAA6BI,IAA7B;AAAmCF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAApD,aAAkEE,IAA7E;AAAA,OAAV,CAAP;;AACF,SAAK,aAAL;AACE,UAAMC,MAAM,GAAGP,MAAM,CAACQ,IAAtB;AACA,aAAOT,KAAK,CAACU,MAAN,CAAa,UAACC,GAAD;AAAA,eAASA,GAAG,CAACR,EAAJ,KAAWK,MAApB;AAAA,OAAb,CAAP;;AACF;AACE,aAAOR,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,KAAf","sourcesContent":["const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    case 'TOGGLE_TODO':\n      return state.map((todo) => (todo.id === action.id ? { ...todo, completed: !todo.completed } : todo));\n    case 'REMOVE_TODO':\n      const itemId = action.data;\n      return state.filter((val) => val.id !== itemId);\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}