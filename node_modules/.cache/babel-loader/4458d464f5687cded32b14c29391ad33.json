{"ast":null,"code":"var _jsxFileName = \"/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/src/components/TodoList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport { connect } from 'react-redux';\nimport { removeTodo } from '../actions';\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos,\n      toggleTodo = _ref.toggleTodo,\n      dispatch = _ref.dispatch;\n\n  var handleRemove = function handleRemove() {\n    dispatch(removeTodo(todos));\n  };\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, todos.map(function (todo) {\n    return React.createElement(Todo, Object.assign({\n      key: todo.id\n    }, todo, {\n      onClick: function onClick() {\n        return toggleTodo(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }));\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default connect()(TodoList);","map":{"version":3,"sources":["/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/src/components/TodoList.js"],"names":["React","PropTypes","Todo","connect","removeTodo","TodoList","todos","toggleTodo","dispatch","handleRemove","map","todo","id","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,QAAQ,CAACJ,UAAU,CAACE,KAAD,CAAX,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,OAAwBD,IAAxB;AAA8B,MAAA,OAAO,EAAE;AAAA,eAAMJ,UAAU,CAACI,IAAI,CAACC,EAAN,CAAhB;AAAA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADS;AAAA,GAAV,CADH,CADF;AAOD,CAZD;;AAcAP,QAAQ,CAACQ,SAAT,GAAqB;AACnBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,OAAV,CACLb,SAAS,CAACc,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEX,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEdC,IAAAA,SAAS,EAAEjB,SAAS,CAACkB,IAAV,CAAeF,UAFZ;AAGdG,IAAAA,IAAI,EAAEnB,SAAS,CAACoB,MAAV,CAAiBJ;AAHT,GAAhB,EAIGA,UALE,EAMLA,UAPiB;AAQnBV,EAAAA,UAAU,EAAEN,SAAS,CAACqB,IAAV,CAAeL;AARR,CAArB;AAWA,eAAed,OAAO,GAAGE,QAAH,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport { connect } from 'react-redux';\nimport { removeTodo } from '../actions';\n\nconst TodoList = ({ todos, toggleTodo, dispatch }) => {\n  const handleRemove = () => {\n    dispatch(removeTodo(todos));\n  };\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default connect()(TodoList);\n"]},"metadata":{},"sourceType":"module"}