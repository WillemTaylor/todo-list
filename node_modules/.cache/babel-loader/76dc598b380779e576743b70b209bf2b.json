{"ast":null,"code":"import _objectSpread from\"/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var todos=function todos(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'ADD_TODO':return[].concat(_toConsumableArray(state),[{id:action.id,text:action.text,completed:false}]);case'TOGGLE_TODO':return state.map(function(todo){return todo.id===action.id?_objectSpread(_objectSpread({},todo),{},{completed:!todo.completed}):todo;});case'REMOVE_TODO':return state.filter(function(item){return item.text!==action.text;});default:return state;}};export default todos;","map":{"version":3,"sources":["/home/willemtaylor/Desktop/Projects/MAGO test/react/react/todo/src/reducers/todos.js"],"names":["todos","state","action","type","id","text","completed","map","todo","filter","item"],"mappings":"iXAAA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACpC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,UAAL,CACE,mCACKF,KADL,GAEE,CACEG,EAAE,CAAEF,MAAM,CAACE,EADb,CAEEC,IAAI,CAAEH,MAAM,CAACG,IAFf,CAGEC,SAAS,CAAE,KAHb,CAFF,GAQF,IAAK,aAAL,CACE,MAAOL,CAAAA,KAAK,CAACM,GAAN,CAAU,SAACC,IAAD,QAAWA,CAAAA,IAAI,CAACJ,EAAL,GAAYF,MAAM,CAACE,EAAnB,gCAA6BI,IAA7B,MAAmCF,SAAS,CAAE,CAACE,IAAI,CAACF,SAApD,GAAkEE,IAA7E,EAAV,CAAP,CACF,IAAK,aAAL,CACE,MAAOP,CAAAA,KAAK,CAACQ,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACL,IAAL,GAAcH,MAAM,CAACG,IAA/B,EAAb,CAAP,CACF,QACE,MAAOJ,CAAAA,KAAP,CAfJ,CAiBD,CAlBD,CAoBA,cAAeD,CAAAA,KAAf","sourcesContent":["const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    case 'TOGGLE_TODO':\n      return state.map((todo) => (todo.id === action.id ? { ...todo, completed: !todo.completed } : todo));\n    case 'REMOVE_TODO':\n      return state.filter((item) => item.text !== action.text);\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}